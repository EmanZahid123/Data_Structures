#from collections.abc import Iterator, Iterable, Reversible. Contain both next and prev.

class doublyLinkedList:
    class Node:
        def __init__(self,data=None):
            self.data=data
            self.next=None
            self.prev=None

    def __init__(self):
        self.head=self.Node()
        self.tail=self.Node()
        self.head.next=self.tail
        self.tail.prev=self.head
        self.it=self.head.next
        self.count=0

    def __iter__(self):
        self.it = self.head
        return self

    def __next__(self):
        self.it = self.it.next
        if self.it != self.tail:
            d = self.it.data
            return self.it.data
        else:
            raise StopIteration

    def __reversed__(self):
        # ?????
        return self

    def __len__(self):
        return self.count

    def add_node(self,o):
        t=self.Node(o)
        t.next=self.tail
        t.prev=self.tail.prev
        self.tail.prev.next=t
        self.tail.prev=t
        self.count+=1

    def remove(self, index):
        cur = None
        if type(index) is int:    
            cur=self.head.next
            i=0
            while i!=index and cur!=self.tail:
                i=i+1
                cur=cur.next
            if cur==self.tail:
                raise Exception
        elif type(index) is self.DLLIterator:
            cur = index.current
        cur.prev.next=cur.next
        cur.next.prev=cur.prev
        del cur
        self.count-=1

    def Display(self):
        cur=self.head.next
        while cur!=self.tail:
            print(cur.data, end=" ")
            cur=cur.next
        print()

def main():
    # Create a new Doubly Linked List
    dll = doublyLinkedList()
    # Insert the element to empty list
    dll.add_node(10)
    # Insert the element at the end
    dll.add_node(20)
    dll.add_node(30)
    dll.add_node(70)
    dll.add_node(50)
    dll.add_node(60)
    dll.add_node(80)
    dll.add_node(90)
    dll.add_node(40)
    # Display Data
    print("Display 10 items")
    dll.Display()
    # Delete elements from start
    dll.remove(0)
    # Delete elements from end
    dll.remove(0)
    # Display Data
    print("Display without (removed) first two items")
    dll.Display()
    print()

    y = iter(dll)
    print(next(y))
    print(next(y))
    print(next(y))
    print(next(y))
    print(next(y))
    print(next(y))
    print(next(y))
    print()
    
    print("OUTPUT of 'for d in dll:'")
    for d in dll:
        print(d)
    print()

    print("OUTPUT of 'for d in reversed(dll):'")
    for d in reversed(dll):
        print(d)
    print()

    print("OUTPUT through manual next calls")
    itm1 = iter(dll)
    itm2 = iter(dll)

    print("first through itm1: " + str(next(itm1)))
    print("next  through itm1: " + str(next(itm1)))
    print("first through itm2: " + str(next(itm2)))
    print("next  through itm2: " + str(next(itm2)))
    print("next  through itm2: " + str(next(itm2)))
    print("next  through itm1: " + str(next(itm1)))
    print("next  through itm2: " + str(next(itm2)))
    print("next  through itm2: " + str(next(itm2)))
    print("next  through itm2: " + str(next(itm2)))
    print("next  through itm2: " + str(next(itm2)))
    print("next  through itm1: " + str(next(itm1)))

    print()

main()

